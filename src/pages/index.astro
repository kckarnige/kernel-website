---
import BaseLayout from '~/layouts/BaseLayout.astro';

import Atom from "~/components/Atom.astro";
import Button from "~/components/Button";
import PageSection from "~/components/PageSection";
import SectionChip from "~/components/SectionChip.astro";
import CodeExample from "~/components/CodeExample.astro";
import Text from "~/components/Text";

// const APPS = ["Discord", "Slack", "VSCode", "Teams", "Figma"];
---

<BaseLayout title="Home - Kernel"
    description="Kernel gives you full control over Electron applications with powerful custom JavaScript packages and APIs for tinkering.">
    <main>
        <PageSection id="hero-section">
            <div class="kernel-hero-contents" id="content">
                <Text variant="title">
                    The mod loader for <span class="kernel-title-highlight">Electron</span>
                </Text>
                <Text tag="p">
                    Kernel gives you full control over Electron applications with powerful custom JavaScript <a
                        href="/packages">packages</a> and <a href="/docs">APIs</a> for tinkering.
                </Text>
                <div class="kernel-hero-buttons">
                    <Button href="https://github.com/kernel-mod/installer-gui/releases/latest/" variant="accent">
                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16">
                            <path fill-rule="evenodd"
                                d="M7.47 10.78a.75.75 0 001.06 0l3.75-3.75a.75.75 0 00-1.06-1.06L8.75 8.44V1.75a.75.75 0 00-1.5 0v6.69L4.78 5.97a.75.75 0 00-1.06 1.06l3.75 3.75zM3.75 13a.75.75 0 000 1.5h8.5a.75.75 0 000-1.5h-8.5z" />
                        </svg>
                        Download Installer
                    </Button>
                    <Button href="/docs">Learn More {">"}</Button>
                </div>
            </div>

            <Atom />
        </PageSection>
        <PageSection id="flexibility-section">
            <div class="kernel-flexibility-contents">
                <SectionChip>Flexibility</SectionChip>
                <Text variant="title">
                    Full control over your apps.
                </Text>
                <Text tag="p">
                    Kernel unlocks the potential to modify Electron applications across all three processes, giving powerful low-level access to community-made packages.
                </Text>
            </div>
            <div class="kernel-flexibility-showcase">
                <CodeExample
                    glow
                    hue={322}
                    title="main.js"
                >
                    <pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #FF7B72">const</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">path</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">require</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">"path"</span><span style="color: #C9D1D9">);</span></span>
<span class="line"></span>
<span class="line"><span style="color: #79C0FF">module</span><span style="color: #C9D1D9">.</span><span style="color: #79C0FF">exports</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">=</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">class</span><span style="color: #C9D1D9"> </span><span style="color: #FFA657">PackageName</span><span style="color: #C9D1D9"> {"{"}</span></span>
<span class="line"><span style="color: #C9D1D9">    </span><span style="color: #D2A8FF">start</span><span style="color: #C9D1D9">() {"{"}</span></span>
<span class="line"><span style="color: #C9D1D9">        console.</span><span style="color: #D2A8FF">log</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">"Package loaded!"</span><span style="color: #C9D1D9">, path);</span></span>
<span class="line"><span style="color: #C9D1D9">    }</span></span>
<span class="line"><span style="color: #C9D1D9">{"}"};</span></span></code></pre>
                </CodeExample>
                <CodeExample
                    glow
                    hue={226}
                    title="renderer.js"
                >
                    <pre class="astro-code" style="background-color: #0d1117; overflow-x: auto;"><code><span class="line"><span style="color: #8B949E">// You can only import browser-friendly modules.</span></span>
<span class="line"><span style="color: #FF7B72">import</span><span style="color: #C9D1D9"> </span><span style="color: #79C0FF">*</span><span style="color: #C9D1D9"> </span><span style="color: #FF7B72">as</span><span style="color: #C9D1D9"> nests </span><span style="color: #FF7B72">from</span><span style="color: #C9D1D9"> </span><span style="color: #A5D6FF">"nests"</span><span style="color: #C9D1D9">;</span></span>
<span class="line"></span>
<span class="line"><span style="color: #FF7B72">export</span><span style="color: #FFA657"> </span><span style="color: #FF7B72">default</span><span style="color: #FFA657"> </span><span style="color: #FF7B72">class</span><span style="color: #FFA657"> PackageName {"{"}</span></span>
<span class="line"><span style="color: #FFA657">    </span><span style="color: #D2A8FF">start</span><span style="color: #FFA657">() </span><span style="color: #C9D1D9">{"{"}</span></span>
<span class="line"><span style="color: #C9D1D9">        console.</span><span style="color: #D2A8FF">log</span><span style="color: #C9D1D9">(</span><span style="color: #A5D6FF">"Package loaded!"</span><span style="color: #C9D1D9">, nests);</span></span>
<span class="line"><span style="color: #C9D1D9">    {"}"}</span></span>
<span class="line"><span style="color: #FFA657">{"}"}</span></span></code></pre>
                </CodeExample>
            </div>
        </PageSection>
    </main>
</BaseLayout>

<style>
    @keyframes rotate {
        0% {
            transform: rotate(0deg) var(--transform, scale(1));
        }

        100% {
            transform: rotate(360deg) var(--transform, scale(1));
        }
    }

    :global(header.kernel-navbar) {
        position: absolute;
        inset: 0;
    }

    :global(.kernel-navbar),
    .kernel-hero-contents {
        mix-blend-mode: difference;
    }

    main :global(#hero-section) {
        background-color: var(--kernel-background-secondary);
        text-align: center;
        overflow: hidden;
    }

    main :global(#hero-section .kernel-page-section-inner) {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .kernel-hero-contents {
        position: relative;
        z-index: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-block-size: 680px;
        padding-block: 128px;
        box-sizing: border-box;
    }

    :global(#hero-section .kernel-title) {
        font-size: 48px;
    }

    .kernel-title-highlight {
        overflow: hidden;
        position: relative;
        color: var(--kernel-accent-primary);
    }

    :global(#hero-section .kernel-caption) {
        color: var(--kernel-foreground-tertiary);
        font-size: 18px;
        line-height: 2;
        max-inline-size: 48ch;
        margin-block: 12px 24px;
    }

    :global(.kernel-caption) a {
        color: var(--kernel-accent-primary);
        text-decoration: underline;
        text-decoration-style: wavy;
        text-decoration-color: var(--kernel-accent-faded);
        text-decoration-skip-ink: none;
    }

    .kernel-hero-buttons {
        display: flex;
        flex-wrap: wrap;
        gap: 12px;
    }

    .kernel-hero-buttons :global(.kernel-button) {
        flex: 1 1 auto;
        padding-block: 16px;
    }

    .kernel-hero-buttons :global(.kernel-button:last-child) {
        background-color: var(--kernel-interactive-tertiary);
    }

    .kernel-hero-buttons :global(.kernel-button:last-child:hover) {
        background-color: var(--kernel-interactive-quarternary);
    }

    :global(.kernel-atom) {
        animation: rotate 400s linear infinite;
        --transform: rotate(22.5deg);
    }

    :global(#flexibility-section) {
        background-color: var(--kernel-background-tertiary);
    }

    :global(#flexibility-section .kernel-page-section-inner) {
        display: flex;
        align-items: center;
        justify-content: space-between;
        flex-wrap: wrap;
        padding-block: 128px;
        gap: 48px;
    }

    .kernel-flexibility-showcase {
        display: flex;
        flex-direction: column;
        flex-wrap: wrap;
        gap: 24px;
    }

    @media only screen and (max-width: 1080px) {
        .kernel-flexibility-showcase {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(360px, 1fr));;
            flex: 1;
            width: 100%;
        }
    }

    @media only screen and (max-width: 1024px) {
        :global(#flexibility-section .kernel-page-section-inner) {
            padding-block: 64px;
        }

        :global(.kernel-atom) {
            --transform: rotate(22.5deg) scale(0.7);
        }
    }

    @media only screen and (max-width: 768px) {
        main :global(#hero-section) {
            text-align: left;
        }

        .kernel-hero-contents {
            min-block-size: 100vh;
            align-items: flex-start;
        }

        :global(.kernel-navbar) {
            mix-blend-mode: normal;
        }
    }

    @media only screen and (max-width: 648px) {
        .kernel-flexibility-showcase {
            grid-template-columns: auto;
        }
    }

    @media (prefers-reduced-motion: reduce) {
        :global(.kernel-atom) {
            animation: none;
        }
    }

    :global(#flexibility-section .kernel-title) {
        max-inline-size: 440px;
        font-size: 56px;
        margin-block: 16px;
    }

    :global(#flexibility-section .kernel-caption) {
        max-inline-size: 48ch;
        font-size: 20px;
        line-height: 2;
        color: var(--kernel-foreground-tertiary);
    }
</style>